@model IEnumerable<CompuMedical.Application.Dto.Invoice.GetInvoicesDto>
@{
  ViewBag.Title = "Invoices Grid";
  int index = 1;
}
<div class="container">

  <table class="table table-bordered">
    <thead>
      <tr>
        <th style="text-align: center;"></th>
        <th style="text-align: center;">Serial</th>
        <th style="text-align: center;">Total Amount</th>
        <th style="text-align: center;">Taxes</th>
        <th style="text-align: center;">Net</th>
        <th style="text-align: center;">Date</th>
        <th style="text-align: center;"> Details</th>
      </tr>
    </thead>
    <tbody style="font-size: 15px;">
      @foreach (var item in Model)
      {
        <tr StoreId="@item.StoreId" InvoiceId="@item.Id">
          <td style="text-align:center">

          <i class="fa-solid fa-trash-can" style="font-size: 30px !important;color: hsl(0, 80%, 56%);cursor: pointer;"
              title="Remove" onclick="RemoveInvoice(this)"></i>
          </td>
          <td style="text-align:center;">
            @index
          </td>
          <td style="text-align:center;">
            @item.TotalAmount
          </td>
          <td style="text-align:center;">
            @item.Taxes
          </td>
          <td style="text-align:center;">
            @item.Net
          </td>
          <td style="text-align:center;">
            @item.CreatedDate?.ToString("dd/MM/yyyy")

          </td>
          <td style="text-align:center;">
            <i class="fa fa-info-circle" style="font-size: 30px !important;color: #34ace8;cursor: pointer;"
              title="Details" onclick="GetInvoiceDetails(this)"></i>
          </td>
        </tr>
        index++;
      }
    </tbody>
  </table>

</div>
<div class="modal fade" id="dynamicModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog custom-modal">
    <div class="modal-content">

      <div class="modal-header">
        <h5 class="modal-title">Invoice Details</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>

      <div class="modal-body" id="modalContent"></div>

    </div>
  </div>
</div>
@section Scripts {
  <script>
    function GetInvoiceDetails(src) {
      debugger
      let tr = $(src).closest("tr");
      let InvoiceId = tr.attr("InvoiceId");
      let token = getCookie("AuthToken");
      $("#dynamicModal").modal("show");

      $.ajax({
        type: "GET",
        // data:InvoiceId ,
        url: "/Invoice/InvoiceDetails?invoiceId=" + InvoiceId,
        contentType: "application/json",
         headers: {
              "Authorization": "Bearer " + token
       },
        traditional: true,
        dataType: "html",
        success: function (response) {
          $('#modalContent').html("").append(response);
        },
        error: function (xhr, status, error) {
          let errors = xhr.responseText + ',' + error
          showSwalAlert(errors, 3);
          return false;
        }
      });
    };
    function RemoveInvoice(src) {
      debugger
      let tr = $(src).closest("tr");
      let InvoiceId = tr.attr("InvoiceId");
      let token = getCookie("AuthToken");
      Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
      }).then((result) => {
        if (result.isConfirmed) {
          $.ajax({
            type: "DELETE",
            url: `/Invoice/DeleteInvoice?Id=${InvoiceId}`,
            contentType: "application/json",
            headers: {
              "Authorization": "Bearer " + token
            },
            traditional: true,
            dataType: "json",
            success: function (response) {
                if (response.succeeded) {
                     tr.remove();
                        showSwalAlert('Invoice Delete Successfully',1);
                  }
            },
            error: function (xhr, status, error) {
              let errors = xhr.responseText + ',' + error
              showSwalAlert(errors, 3);
              return false;
            }
          });
        }
      });
    };
  </script>
}